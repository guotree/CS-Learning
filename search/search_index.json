{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computer Science Self Learning Guideline","text":"<p>This computer science self-learning guide draws inspiration from \"Teach Yourself Computer Science\" and \"csdiy.wiki\" presenting the content in a more streamlined and efficient manner.</p> <p>Meanwhile, the following guidelines can also serve as your reference.</p> <ul> <li>r/learningprogramming</li> <li>might.net</li> <li>A Self-Learning, Modern Computer Science Curriculum</li> <li>Open Source Society University</li> </ul>      There are 2 types of software engineer: those who understand computer science well enough to do challenging,      innovative work, and those who just get by because they\u2019re familiar with a few high level tools.      Both call themselves software engineers, and both tend to earn similar salaries in their early careers.      But Type 1 engineers progress toward more fulfilling and well-remunerated work over time,      whether that\u2019s valuable commercial work or breakthrough open-source projects,      technical leadership or high-quality individual contributions.  <p>Your self-learning journey should encompass 11 essential areas:</p> <ol> <li>Programming</li> <li>Computer Architecture</li> <li>Algorithms and Data Structures</li> <li>Math for CS</li> <li>Operating Systems</li> <li>Computer Networking</li> <li>Databases</li> <li>Languages and Compilers</li> <li>Distributed Systems</li> <li>Artificial Intelligence</li> <li>Others</li> </ol> <p>Before embarking on your self-learning adventure, we recommend starting with an introductory course:  Crash Course Computer Science by  Carrie Anne. Here is my Notes</p> <p>This series will provide an excellent foundation for your studies.</p> <p>The recommended content will be marked with a star and displayed in bold at the beginning of the text, while the content I have completed will be marked with a checkmark and set to green at the end of the text.</p>"},{"location":"templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/ai/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/algorithms/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/architecture/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/databases/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/distributed-systems/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/intro/CrashCourseCS/","title":"Computer Science Crash Course","text":"<p>Here are my notes for Crash Course Computer Science's important concepts.</p>"},{"location":"notes/intro/CrashCourseCS/#0-crash-course-computer-science-preview","title":"0. Crash Course Computer Science Preview","text":""},{"location":"notes/intro/CrashCourseCS/#1-early-computing","title":"1. Early Computing","text":""},{"location":"notes/intro/CrashCourseCS/#2-electronic-computing","title":"2. Electronic Computing","text":""},{"location":"notes/intro/CrashCourseCS/#3-boolean-logic-logic-gates","title":"3. Boolean Logic &amp; Logic Gates","text":""},{"location":"notes/intro/CrashCourseCS/#4-representing-numbers-and-letters-with-binary","title":"4. Representing Numbers and Letters with Binary","text":""},{"location":"notes/intro/CrashCourseCS/#5-how-computers-calculate-the-alu","title":"5. How Computers Calculate \u2013 the ALU","text":""},{"location":"notes/intro/CrashCourseCS/#6-registers-and-ram","title":"6. Registers and RAM","text":""},{"location":"notes/intro/CrashCourseCS/#7-the-central-processing-unit-cpu","title":"7. The Central Processing Unit (CPU)","text":""},{"location":"notes/intro/CrashCourseCS/#8-instructions-programs","title":"8. Instructions &amp; Programs","text":""},{"location":"notes/intro/CrashCourseCS/#9-advanced-cpu-designs","title":"9. Advanced CPU Designs","text":""},{"location":"notes/intro/CrashCourseCS/#10-early-programming","title":"10. Early Programming","text":""},{"location":"notes/intro/CrashCourseCS/#11-the-first-programming-languages","title":"11. The First Programming Languages","text":""},{"location":"notes/intro/CrashCourseCS/#12-programming-basics-statements-functions","title":"12. Programming Basics \u2013 Statements &amp; Functions","text":""},{"location":"notes/intro/CrashCourseCS/#13-intro-to-algorithms","title":"13. Intro to Algorithms","text":""},{"location":"notes/intro/CrashCourseCS/#14-data-structures","title":"14. Data Structures","text":""},{"location":"notes/intro/CrashCourseCS/#15-alan-turing","title":"15. Alan Turing","text":""},{"location":"notes/intro/CrashCourseCS/#16-software-engineering","title":"16. Software Engineering","text":""},{"location":"notes/intro/CrashCourseCS/#17-integrated-circuits-moores-law","title":"17. Integrated Circuits &amp; Moore\u2019s Law","text":""},{"location":"notes/intro/CrashCourseCS/#18-operating-systems","title":"18. Operating Systems","text":""},{"location":"notes/intro/CrashCourseCS/#19-memory-storage","title":"19. Memory &amp; Storage","text":""},{"location":"notes/intro/CrashCourseCS/#20-files-file-systems","title":"20. Files &amp; File Systems","text":""},{"location":"notes/intro/CrashCourseCS/#21-compression","title":"21. Compression","text":""},{"location":"notes/intro/CrashCourseCS/#22-keyboards-command-line-interfaces","title":"22. Keyboards &amp; Command Line Interfaces","text":""},{"location":"notes/intro/CrashCourseCS/#23-screens-2d-graphics","title":"23. Screens &amp; 2D Graphics","text":""},{"location":"notes/intro/CrashCourseCS/#24-the-cold-war-and-consumerism","title":"24. The Cold War and Consumerism","text":""},{"location":"notes/intro/CrashCourseCS/#25-the-personal-computer-revolution","title":"25. The Personal Computer Revolution","text":""},{"location":"notes/intro/CrashCourseCS/#26-graphical-user-interfaces","title":"26. Graphical User Interfaces","text":""},{"location":"notes/intro/CrashCourseCS/#27-3d-graphics","title":"27. 3D Graphics","text":""},{"location":"notes/intro/CrashCourseCS/#28-computer-networks","title":"28. Computer Networks","text":""},{"location":"notes/intro/CrashCourseCS/#29-the-internet","title":"29. The Internet","text":""},{"location":"notes/intro/CrashCourseCS/#30-the-world-wide-web","title":"30. The World Wide Web","text":""},{"location":"notes/intro/CrashCourseCS/#31-cybersecurity","title":"31. Cybersecurity","text":""},{"location":"notes/intro/CrashCourseCS/#32-hackers-cyber-attacks","title":"32. Hackers &amp; Cyber Attacks","text":""},{"location":"notes/intro/CrashCourseCS/#33-cryptography","title":"33. Cryptography","text":""},{"location":"notes/intro/CrashCourseCS/#34-machine-learning-artificial-intelligence","title":"34. Machine Learning &amp; Artificial Intelligence","text":""},{"location":"notes/intro/CrashCourseCS/#35-computer-vision","title":"35. Computer Vision","text":""},{"location":"notes/intro/CrashCourseCS/#36-natural-language-processing","title":"36. Natural Language Processing","text":""},{"location":"notes/intro/CrashCourseCS/#37-robots","title":"37. Robots","text":""},{"location":"notes/intro/CrashCourseCS/#38-psychology-of-computing","title":"38. Psychology of Computing","text":""},{"location":"notes/intro/CrashCourseCS/#39-educational-technology","title":"39. Educational Technology","text":""},{"location":"notes/languages/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/math/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/networking/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/operating-systems/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/others/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"notes/programming/templates/","title":"TODO","text":"<p>The content needs further refinement.</p>"},{"location":"resources/ai/","title":"Artificial Intelligence","text":"Subject Book Course Video Artificial Intelligence Artificial Intelligence: A Modern Approach Berkeley's CS188: Introduction to Artificial Intelligence Fall 2018              Bilibili Youtube Harvard CS50: Introduction to AI with Python              Bilibili Youtube Data Science Introduction to Data Science: Data Wrangling and Visualization with R Statistics and Prediction Algorithms Through Case Studies Harvard CS109: Data Science              Bilibili Computational and Inferential Thinking: The Foundations of Data Science UCB Data8: The Foundations of Data Science Spring 2022              Youtube Learning Data Science UCB Data100: Principles and Techniques of Data Science Spring 2024              Youtube Machine Learning Machine Learning Specialization Bilibili Youtube An Introduction to Statistical Learning with Python Stanford Statistical Learning Bilibili Youtube Learning From Data Caltech CS156: Machine Learning              Bilibili Youtube Stanford CS229: Machine Learning              Bilibili Youtube Deep Learning Foundations and Concepts UCB CS189: Introduction to Machine Learning Spring 2024              Bilibili CMU 10-414/714: Deep Learning Systems              Official Machine Learning Compilation Machine Learning Compilation Bilibili Youtube Deep Learning Deep Learning Specialization Bilibili                 Youtube                 1,                  2,                  3,                  4,                  5 CS231N: CNN for Visual Recognition (Spring 2017)              Bilibili Youtube CS224N: Natural Language Processing (Winter 2023)              Bilibili Youtube CS224W: Machine Learning with Graphs (Fall 2021)              Bilibili Youtube Deep Learning UMich EECS 498-007 / 598-005: Deep Learning for Computer Vision (Fall 2019)              Bilibili Youtube UCB CS285: Deep Reinforcement Learning (Fall 2023)              Bilibili Youtube Further Learning Pattern Recognition and Machine Learning MIT 6.867: Machine Learning              All of statistics CMU 36-705: Intermediate Statistics              Youtube Convex Optimization EE364A Convex Optimization \u2160 EE364B Convex Optimization \u2161              Bilibili Youtube Probabilistic Machine Learning The Elements of Statistical Learning CMU 10-708: Probabilistic Graphical Models Bilibili Youtube Columbia STAT 8201: Deep Generative Models              U Toronto STA 4273: Minimizing Expectations              Stanford CS229M: Machine Learning Theory              Bilibili Youtube"},{"location":"resources/algorithms/","title":"Algorithms and Data Structures","text":"Book Course Video The Algorithm Design Manual Steven Skiena's CSE 373: Analysis of Algorithms              Bilibili Youtube Algorithms Illuminated Stanford CS161: Design and Analysis of Algorithms              Bilibili Youtube Coursera Introduction to Algorithms MIT 6.006: Introduction to Algorithms              Bilibili Youtube Algorithms Princeton COS226: Algorithms              Bilibili Youtube                 Coursera                  1,                  2"},{"location":"resources/architecture/","title":"Computer Architecture","text":"Book Course Video Computer Systems: A Programmer's Perspective UCB CS61C: Great Ideas in Computer Architecture                               Fall 2020:  Bilibili Youtube                  Spring 2015:  Bilibili Youtube CMU CS15213: Introduction to Computer Systems              Bilibili Youtube The Elements of Computing Systems                 Computer Organization and Design              Nand2Tetris Bilibili                 Coursera                  1,                  2"},{"location":"resources/databases/","title":"Databases","text":"Book Course Video Architecture of a Database System Berkeley CS186: Introduction to Database Systems              Bilibili Youtube Database Management Systems Transaction Processing: Concepts and Techniques Database System Concepts CMU 15-445/645: Database Systems (Fall 2023)              Youtube Readings in Database Systems Data and Reality: A Timeless Perspective on Perceiving and Managing Information in Our Imprecise World"},{"location":"resources/distributed-systems/","title":"Distributed Systems","text":"Book Course Video Designing Data-Intensive Applications MIT 6.824: Distributed Systems              Bilibili Youtube Official Distributed Systems, 4th                  Paper List: here; Paper We Loved: here"},{"location":"resources/languages/","title":"Languages and Compilers","text":"Book Course Video Crafting Interpreters Compilers: Principles, Techniques &amp; Tools Stanford CS143: Compilers              Bilibili Youtube edX"},{"location":"resources/math/","title":"Math for CS","text":"Subject Book Course Video Discrete Mathematics lecture notes by L\u00e1szl\u00f3 Lov\u00e1sz MIT 6.042J: Mathematics for Computer Science              Bilibili Youtube Mathematics for Computer Science UCB CS70: Discrete Mathematics and Probability Theory              Bilibili Youtube Linear Algebra Introduction to Linear Algebra Essence of linear algebra Bilibili Youtube MIT 18.06SC: Linear Algebra              Bilibili Youtube"},{"location":"resources/networking/","title":"Computer Networking","text":"Book Course Video Computer Networking: A Top-Down Approach Stanford CS144: Introduction to Computer Networking              Bilibili Youtube Jim Kurose's lecture Bilibili Official"},{"location":"resources/operating-systems/","title":"Operating Systems","text":"Step Book Course Video Step 1: Learning the basic Operating Systems: Three Easy Pieces MIT 6.S081: Operating System Engineering              Bilibili Official Operating Systems: Principles and Practice UCB CS162: Operating Systems and System Programming              Bilibili Youtube Operating System Concepts Modern Operating Systems Step 2: explore the design decisions of specific operating systems Lion's commentary on Unix The Design and Implementation of the FreeBSD Operating System Mac OS X Internals Linux Kernel Development <p>A great way to consolidate your understanding of operating systems is to read the code of a small kernel and add features. One choice is xv6,     a port of Unix V6 to ANSI C and x86, maintained for a course at MIT. OSTEP has an appendix of potential xv6 labs full of great ideas for potential projects.</p>"},{"location":"resources/others/","title":"Other","text":"Book Course Video MIT 6.031 notes MIT 6.031: Software Construction              Engineering Software as a Service UCB CS169: Software Engineering              Bilibili Book video MIT Web Development Crash Course MIT Web Development Crash Course Youtube"},{"location":"resources/programming/","title":"Programming","text":"<p>This part is an introduction to computer programming, and here are books and courses I recommend to you:</p> Book Course Video Structure and Interpretation of Computer Programs Brian Harvey's UCB CS61A: Structure and Interpretation of Computer Programs (Spring 2010)              Bilibili Youtube MIT 6.001: Structure and Interpretation of Computer Programs                               Harold Abelson's in 1986: Bilibili Youtube                  Eric Grimson's in 2004: Bilibili Youtube How to design programs / / Composing Programs John DeNero's UCB CS61A: Structure and Interpretation of Computer Programs (Fall 2020)              Bilibili Official <p>These are open classes for other specific programming languages:</p> <ul> <li>General         <ol> <li>MIT's The Missing Semester of Your CS Education:                  Bilibili;                  Youtube </li> <li>Harvard's CS50x:                  Bilibili;                  Youtube </li> </ol> </li> <li>Python         <ol> <li> Harvard's CS50 Python:                  Bilibili;                  Youtube </li> <li> Python for Everybody by Dr. Chuck                 Bilibili,                  Youtube </li> </ol> </li> <li>C         <ol> <li>C Programming for Everybody by Dr. Chuck:                 Youtube </li> </ol> </li> </ul>"}]}